@page "/contact"
@using ContactForm_Andy.Shared.Models
@inject ILogger<ContactForm> Logger
@inject IContactFormService ContactFormService


<PageTitle>Contact Form</PageTitle>

<h2>Contact Form</h2>

@if (lastSubmitResult != null)
{
    <h4 class="text-info">
        @lastSubmitResult
    </h4>
}
@if (alreadySubmittd == true)
{
    <h4 class="text-info">
        Your complaint has already been lodged, please wait for us to contact you.
    </h4>
}

<EditForm Model="@model" OnValidSubmit=@ValidFormSubmitted OnInvalidSubmit=@InvalidFormSubmitted>
    <DataAnnotationsValidator />
    
    

    <div class="form-group row mb-3">
        <label for="name" class="col-sm-2 col-form-label">
            Name
        </label>
        <div class="col-sm-10">
            <InputText id="name" class="form-control" @bind-Value="model!.Name" />
        </div>
        <div class="col-sm-8 text-danger">
            <ValidationMessage For="@(() => model.Name)" />
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="emailAddress" class="col-sm-2 col-form-label">
            Email Address
        </label>
        <div class="col-sm-10">
            <InputText id="emailAddress" class="form-control" @bind-Value="model!.Email" />
        </div>
        <div class="col-sm-8 text-danger">
            <ValidationMessage For="@(() => model.Email)" />
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="phone" class="col-sm-2 col-form-label">
            Phone
        </label>
        <div class="col-sm-10">
            <InputText id="phone" class="form-control" @bind-Value="model!.Phone" />
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="message" class="col-sm-2 col-form-label">
            Message
        </label>
        <div class="col-sm-10">
            <InputTextArea id="message" class="form-control" @bind-Value="model!.Message" />
        </div>
        <div class="col-sm-8 text-danger">
            <ValidationMessage For="@(() => model.Message)" />
        </div>
    </div>
    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
        <button type="submit" class="btn btn-primary float-right">Submit</button>
    </div>
</EditForm>

@code {
    protected ContactForm model = new ContactForm();
    string lastSubmitResult;
    bool alreadySubmittd = false;

    private async Task ValidFormSubmitted(EditContext editContext)
    {
        lastSubmitResult = "Submitted";
        var result = await ContactFormService.GetFormByEmail(model.Email);
        if (result is null)
        {
            await ContactFormService.SubmitForm(model);
        }
        else
        {
            alreadySubmittd = true;
            lastSubmitResult = null;
            model.Email = string.Empty;
            model.Name = string.Empty;
            model.Phone = string.Empty;
            model.Message = string.Empty;
        }
    }

    private void InvalidFormSubmitted(EditContext editContext)
    {
        lastSubmitResult = "Submit failed";
        alreadySubmittd = false;
    }

}
